{"ast":null,"code":"var _jsxFileName = \"D:\\\\teamproject\\\\frontend\\\\src\\\\components\\\\GanttChart.tsx\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Cell } from 'recharts';\nimport { parseISO, format, differenceInDays, addDays } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 状态颜色映射\nconst statusColors = {\n  planning: '#9333ea',\n  // purple\n  development: '#eab308',\n  // yellow\n  testing: '#06b6d4',\n  // cyan\n  release: '#22c55e',\n  // green\n  completed: '#6b7280' // gray\n};\nconst GanttChart = ({\n  versions\n}) => {\n  var _sortedData$, _sortedData$2;\n  // 如果没有版本数据，显示提示信息\n  if (versions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64 bg-gray-50 rounded-lg border border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"\\u6682\\u65E0\\u7248\\u672C\\u6570\\u636E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 处理日期格式并计算项目持续时间\n  const chartData = versions.map(version => {\n    const startDate = typeof version.start_date === 'string' ? parseISO(version.start_date) : version.start_date;\n    const endDate = typeof version.end_date === 'string' ? parseISO(version.end_date) : version.end_date;\n    const duration = differenceInDays(endDate, startDate) + 1; // 包括开始和结束日期\n\n    return {\n      ...version,\n      name: version.name,\n      startDate,\n      endDate,\n      duration,\n      color: statusColors[version.status] || '#6b7280'\n    };\n  });\n\n  // 对数据按开始日期排序\n  const sortedData = [...chartData].sort((a, b) => a.startDate.getTime() - b.startDate.getTime());\n\n  // 找出整个项目的时间跨度\n  let minDate = ((_sortedData$ = sortedData[0]) === null || _sortedData$ === void 0 ? void 0 : _sortedData$.startDate) || new Date();\n  let maxDate = ((_sortedData$2 = sortedData[0]) === null || _sortedData$2 === void 0 ? void 0 : _sortedData$2.endDate) || new Date();\n  sortedData.forEach(item => {\n    if (item.startDate < minDate) minDate = item.startDate;\n    if (item.endDate > maxDate) maxDate = item.endDate;\n  });\n\n  // 为了美观，稍微扩大时间范围\n  minDate = addDays(minDate, -1);\n  maxDate = addDays(maxDate, 1);\n\n  // 格式化工具提示内容\n  const customTooltip = ({\n    active,\n    payload\n  }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-3 border border-gray-200 shadow-md rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold text-gray-800\",\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [format(data.startDate, 'yyyy-MM-dd'), \" \\u81F3 \", format(data.endDate, 'yyyy-MM-dd')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"\\u4F18\\u5148\\u7EA7: \", data.priority]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"\\u8FDB\\u5EA6: \", data.progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 max-w-xs truncate\",\n          children: [\"\\u6982\\u8981: \", data.summary]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold mb-4\",\n      children: \"\\u9879\\u76EE\\u7518\\u7279\\u56FE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: versions.length * 60 + 50,\n      minHeight: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        layout: \"vertical\",\n        data: sortedData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 100,\n          bottom: 20\n        },\n        barSize: 20,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          horizontal: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          type: \"number\",\n          dataKey: \"duration\",\n          domain: [0, differenceInDays(maxDate, minDate)],\n          tickFormatter: value => format(addDays(minDate, value), 'MM/dd'),\n          tick: {\n            fontSize: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          type: \"category\",\n          dataKey: \"name\",\n          tick: {\n            fontSize: 12\n          },\n          width: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: customTooltip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"duration\",\n          background: {\n            fill: '#eee'\n          },\n          radius: [4, 4, 4, 4],\n          children: sortedData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: entry.color\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_c = GanttChart;\nexport default GanttChart;\nvar _c;\n$RefreshReg$(_c, \"GanttChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Cell","parseISO","format","differenceInDays","addDays","jsxDEV","_jsxDEV","statusColors","planning","development","testing","release","completed","GanttChart","versions","_sortedData$","_sortedData$2","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","map","version","startDate","start_date","endDate","end_date","duration","name","color","status","sortedData","sort","a","b","getTime","minDate","Date","maxDate","forEach","item","customTooltip","active","payload","data","priority","progress","summary","width","height","minHeight","layout","margin","top","right","left","bottom","barSize","strokeDasharray","horizontal","type","dataKey","domain","tickFormatter","value","tick","fontSize","content","background","fill","radius","entry","index","_c","$RefreshReg$"],"sources":["D:/teamproject/frontend/src/components/GanttChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { \r\n  BarChart, \r\n  Bar, \r\n  XAxis, \r\n  YAxis, \r\n  CartesianGrid, \r\n  Tooltip, \r\n  ResponsiveContainer, \r\n  Cell \r\n} from 'recharts';\r\nimport { Version } from '../services/api';\r\nimport { parseISO, format, differenceInDays, addDays } from 'date-fns';\r\n\r\ninterface GanttChartProps {\r\n  versions: Version[];\r\n}\r\n\r\n// 状态颜色映射\r\nconst statusColors = {\r\n  planning: '#9333ea', // purple\r\n  development: '#eab308', // yellow\r\n  testing: '#06b6d4', // cyan\r\n  release: '#22c55e', // green\r\n  completed: '#6b7280', // gray\r\n};\r\n\r\nconst GanttChart: React.FC<GanttChartProps> = ({ versions }) => {\r\n  // 如果没有版本数据，显示提示信息\r\n  if (versions.length === 0) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64 bg-gray-50 rounded-lg border border-gray-200\">\r\n        <p className=\"text-gray-500\">暂无版本数据</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 处理日期格式并计算项目持续时间\r\n  const chartData = versions.map(version => {\r\n    const startDate = typeof version.start_date === 'string' \r\n      ? parseISO(version.start_date) \r\n      : version.start_date;\r\n    \r\n    const endDate = typeof version.end_date === 'string' \r\n      ? parseISO(version.end_date) \r\n      : version.end_date;\r\n    \r\n    const duration = differenceInDays(endDate, startDate) + 1; // 包括开始和结束日期\r\n    \r\n    return {\r\n      ...version,\r\n      name: version.name,\r\n      startDate,\r\n      endDate,\r\n      duration,\r\n      color: statusColors[version.status] || '#6b7280',\r\n    };\r\n  });\r\n\r\n  // 对数据按开始日期排序\r\n  const sortedData = [...chartData].sort((a, b) => a.startDate.getTime() - b.startDate.getTime());\r\n\r\n  // 找出整个项目的时间跨度\r\n  let minDate = sortedData[0]?.startDate || new Date();\r\n  let maxDate = sortedData[0]?.endDate || new Date();\r\n\r\n  sortedData.forEach(item => {\r\n    if (item.startDate < minDate) minDate = item.startDate;\r\n    if (item.endDate > maxDate) maxDate = item.endDate;\r\n  });\r\n\r\n  // 为了美观，稍微扩大时间范围\r\n  minDate = addDays(minDate, -1);\r\n  maxDate = addDays(maxDate, 1);\r\n\r\n  // 格式化工具提示内容\r\n  const customTooltip = ({ active, payload }: any) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <div className=\"bg-white p-3 border border-gray-200 shadow-md rounded-md\">\r\n          <p className=\"font-semibold text-gray-800\">{data.name}</p>\r\n          <p className=\"text-sm text-gray-600\">\r\n            {format(data.startDate, 'yyyy-MM-dd')} 至 {format(data.endDate, 'yyyy-MM-dd')}\r\n          </p>\r\n          <p className=\"text-sm text-gray-600\">优先级: {data.priority}</p>\r\n          <p className=\"text-sm text-gray-600\">进度: {data.progress}%</p>\r\n          <p className=\"text-sm text-gray-600 max-w-xs truncate\">概要: {data.summary}</p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 rounded-lg shadow-md\">\r\n      <h2 className=\"text-lg font-semibold mb-4\">项目甘特图</h2>\r\n      <ResponsiveContainer width=\"100%\" height={versions.length * 60 + 50} minHeight={300}>\r\n        <BarChart\r\n          layout=\"vertical\"\r\n          data={sortedData}\r\n          margin={{ top: 20, right: 30, left: 100, bottom: 20 }}\r\n          barSize={20}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" horizontal={false} />\r\n          <XAxis\r\n            type=\"number\"\r\n            dataKey=\"duration\"\r\n            domain={[0, differenceInDays(maxDate, minDate)]}\r\n            tickFormatter={(value) => format(addDays(minDate, value), 'MM/dd')}\r\n            tick={{ fontSize: 12 }}\r\n          />\r\n          <YAxis\r\n            type=\"category\"\r\n            dataKey=\"name\"\r\n            tick={{ fontSize: 12 }}\r\n            width={100}\r\n          />\r\n          <Tooltip content={customTooltip} />\r\n          <Bar \r\n            dataKey=\"duration\" \r\n            background={{ fill: '#eee' }}\r\n            radius={[4, 4, 4, 4]}\r\n          >\r\n            {sortedData.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={entry.color} />\r\n            ))}\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GanttChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}